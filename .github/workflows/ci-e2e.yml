name: e2e

on:
  push:
    paths:
      - '**'
      - '.github/workflows/ci-e2e.yml'
  pull_request:
    paths:
      - '**'
      - '.github/workflows/ci-e2e.yml'

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest

    # ← ここがポイント：Environment 名を 'dev' に
    environment:
      name: dev

    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://127.0.0.1:27017/yubiwait_ci
      # Environment 'dev' または Repository Secrets から参照されます
      INTERNAL_TOKEN: ${{ secrets.INTERNAL_TOKEN }}
      CANCEL_TOKEN_SECRET: ${{ secrets.CANCEL_TOKEN_SECRET }}
      AUTO_CALLER_INTERVAL_MS: 1000
      STORE_ID: 687e4062912938dd2558db4f
      BASE_URL: http://127.0.0.1:3000/api
      AUTOCALLER_TIMEOUT_MS: 30000
      AUTOCALLER_POLL_MS: 500

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Show layout (for debug)
        run: |
          pwd
          ls -la
          echo "Node: $(node -v)"
          echo "npm:  $(npm -v)"

      - name: Check secrets are present
        run: |
          test -n "${INTERNAL_TOKEN}" || { echo "::error::INTERNAL_TOKEN is missing"; exit 1; }
          test -n "${CANCEL_TOKEN_SECRET}" || { echo "::error::CANCEL_TOKEN_SECRET is missing"; exit 1; }

      - name: Install dependencies
        run: npm ci

      - name: Seed CI data (Store)
        run: node scripts/seed_ci.js

      - name: Start server (background)
        run: |
          node index.js > server.log 2>&1 &
          echo $! > server.pid
          sleep 1

      - name: Wait for server (ready:true up to 120s)
        shell: bash
        run: |
          for i in {1..120}; do
            body="$(curl -fsS http://127.0.0.1:3000/api/ping || true)"
            echo "[$i/120] ping => $body"
            if echo "$body" | grep -q '"ready":true'; then
              echo "Server is ready ✅"
              exit 0
            fi
            sleep 1
          done
          echo "::error::Server did not report ready:true in time"
          echo "=== server.log (tail) ==="
          tail -n 200 server.log || true
          exit 1

      - name: Run E2E - cancel
        run: node scripts/cancel_e2e.js

      - name: Run E2E - autocaller
        run: node scripts/autocaller_e2e.js

      - name: Run E2E - near
        run: node scripts/near_e2e.js

      - name: Run E2E - ready
        run: node scripts/ready_e2e.js

      - name: Run E2E - staff
        run: node scripts/staff_e2e.js

      - name: Upload server.log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-log
          path: server.log
